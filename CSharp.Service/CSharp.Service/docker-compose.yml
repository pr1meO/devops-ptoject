services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: kayuda-csharp
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_HOST=dbhost
      - DB_PASSWORD=admin
      - DB_NAME=CSharp.Service
      - DB_USER=postgres
      - DB_PORT=5432
    depends_on:
      - db

  web2:
    build:
      context: ./Python.Service
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_HOST=dbhost
      - DB_PASSWORD=admin
      - DB_NAME=CSharp.Service
      - DB_USER=postgres
      - DB_PORT=5432
    depends_on:
      - db

  db:
    image: postgres:17.5
    networks:
      app_network:
        aliases:
          - dbhost
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: CSharp.Service
      POSTGRES_USER: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d microservice_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.20.0.0/24"
          gateway: "172.20.0.1"
    labels:
      project: "lb8"
      environment: "development"

volumes:
  postgres_data:
    driver: local
    labels:
      type: "database"
      service: "postgresql"
  pgadmin_data:
    driver: local
    labels:
      type: "admin"
      service: "pgadmin4"


